= Лекция 8 (вроде)
== Матрица перспективного преобразования
Мы в прошлый раз ос
Мы в прошлый раз остановились на том, что рассматривали матрицу проекции Frustum (Frustum --- усечённая пирамида). Она ограничивается глазом наблюдателя, окном наблюдения и горизонтом.
Точка O -- где находится наблюдатель.

Преобразование frustum упаковывает пирамиду в куб

= Преобразование пирамиды в куб. 

// Егор, сравни свой код и мой
// Ансинка нет?
// нет вроде

// HACK: goida
// в виме надо HACK: после выдиление идет

По сути эта матрица --- это переход из системы координат наблюдателя в систему координат пространствап отсечения. То есть получается последовательность: была модельная система координат, в которой строилась сама модель. Таких СК было по количеству моделей. Далее с помощью модельного преобразования (model view) мы переходим в мировую систему координат, но мировая система координат --- лишь привязка в трехмерном пространстве. Далее мы переходим в систему координат наблюдателя с помощью перобразования look_at. Из СК наблюдателя мы переходим в СК пространства отсечения, с помощью, в частности, матрицы Frustum.

MCK $=>^(#[модельного преобразования])_(#[model view])$ CK $=>_(#[Look at])$ CKN $=>_(#[Frustum])$ СКПО

// ебать, а я рисовал
// пусть и так будет
// ебать, а я рис

Но сейчас рассмотрим альтернативы матрице Frustum. Матрица Frustum задает общее преобразование, когда наблюдатель находится в начале  координат, а окно наблюдение где-то в плоскости $z = -"near"$. Но в основном мы картину строим так, чтобы зритель рассматривал её на экране монитора. То есть монитор мы предполагаем как некоторое окно в виртуальный мир. Тогда зритель оказывается за экраном монитора и смотрит на смоделированный мир. Поэтому частный случай мы рассматриваем, когда окно наблюдения находится прямо перед наболюдателем. То есть вот этот виртуальный наблюдатель повторяет человека, который сидит перед монитором. Окно наблюдения --- наш монитор, человек --- наблюдатель. Но окно наблюдения тоже находится в виртуальном мире, как и виртуальный наблюдатель. А мы должны в реальном мире на реальном мониторе построить корректную картинку. 

Но виртуальный наблюдатель смотрит прямо в окно наблюдения (а лучше --- в центр окна наблюдения). В этом случае предполагается, что окно наблюдения --- некоторый прямоугольник, стороны которого паралллельны осям координат, но наблюдатель смотрит строго в центр окна. А это означает, что зная размеры окна и то, что окно располагается в плоскости $z = -"near"$, то мы знаем параметры right, left, bottom, top. Говорим, что окно, как и раньше имеет размеры Vx, Vy. Тогда пирамида видимости становится прямой.

// Сколько Артёмов нужно чтобы законспектировать КГ?...

Получаем прямую пирамиду видимости: в этом и заключается частный случай

#image("imgs/171.png")

#image("imgs/172.png")

мы будем задавать угол обзора по вертикали $O_y$ (`fovy` --- угол между двумя лучами, field of view Oy)

`aspect ratio` --- соотношение сторон нашего окна набюдения

`near` и `far` остаются теже

- `near` --- расстояние до окна наблюдения (ближайшая грань пирамиды видимости)
- `far` --- расстояние до горизонта (дальняя грань пирамиды видимости)

#image("imgs/173.png")

//кто мое полотно текста убрал?! Ты про что?
// я не трогал
Если мы знаем значение угла $#[fovy]/2$ и длину near

$
(V_y)/2
$

Здесь мы видим два прямоугольных треугольника:

#image("imgs/174.png")

// синяя хуйня снизу --- это Никита Рыданов
// huh?
// там баг на скрине у меня
// okay
#image("imgs/175.png")

$
V_y = 2 dot #[near] dot tg (#[fovy])/2 \
V_x = #[aspect] dot 2 dot #[near] dot tg (#[fovy])/2 \
#[left] = - #[aspect] dot #[near] dot tg (#[fovy])/2 \
#[right] = #[aspect] dot #[near] dot tg (#[fovy])/2 \
#[bottom] = - #[near] dot tg (#[fovy])/2 \
#[top] = #[near] dot tg (#[fovy])/2
$


#image("imgs/176.png")

Отсюда получается, что мы знааем `top`, `left`, `right`, `bottom`, `top`, `near`, `far` и можем подставить всё это в матрицу Frustum.
$
#[Frustum(left, right, bottom, top, near, far)] = mat(delim: "["
		// tut rob
	) = mat(delim: "[", [], 
	// tut ded
	) mat(delim: "[", xi'';
	)
$/// это работает + ты 
// ты в мат окружении закрываешь мат окружение долларом
// + скобку не закрыл походу, а не закр
$
#[Frustum(left, right, bottom, top, near, far)]"Frustum"xi''(legamma''ftzeta'', right, bottom, top, near, far)
  = mat(delim: "[",
         ;  ; ; )
  = mat(delim: "[",  
	frac(2 dot "near", "right" - "left"), 0, frac("right" + "left", 0), 0;
		0, frac(2 dot "near", "top" - "bottom"), frac("top" + "bottom", "top" - "bottom"), 0;
		0, 0, - frac("far" + "near", "far" - "near"), frac(-2 dot "far" "dot", "far" - "near");
		0, 0, -1, 0
  	)
  mat(delim: "[", 
	    x ' ', y ' ', z ' ', 1)
$


(right bottom -near) параметры экрана

все сводится к опреации кадрирования.  Ox Oy не меняют свои направления
$
x' = (x - V_(c x))/(V_x) W_x + W_(c x)\
y' = (y - V_(c y))/(V_y) W_y + W_(c y)\
z' = W_(c z) -(z - V_(c z))/(V_z) W_z



$ (underbrace(#[left], V_(c x)), underbrace(#[bottom], V_(c y)), underbrace(#[- near], V_(c z))) $

$
\x' = (x - #[left])/(#[right] - #[left]) 2 -1 = (2 x)/(#[right] - #[left]) + (- 2 #[left] - #[right] + #[left])(#[right] - #[left]) =\
= (2 x)/(#[right] - #[left]) -( #[left] +  #[right] + #[left])(#[right] - #[left])
\y' = (y - #[bottom])/(#[top] - #[bottom]) 2 - 1 = (2 y)/(#[top] - #[bottom]) + (- 2 #[bottom] - #[top] + #[bottom])(#[top] - #[bottom]) =\
= (2 y)/(#[top] - #[bottom]) -( #[bottom] +  #[top] + #[bottom])(#[top] - #[bottom])
z' = 1 - (z - #[near])/(#[far] - #[near]) 2 = (-2 z)/(#[far] - #[near]) + (- 2 #[near] - #[far] + #[near])/(#[far] - #[near]) =\
 (-2 z)/(#[far] - #[near]) - (#[near] + #[far])/(#[far] - #[near]) 
$

== Организация движения в трехмерном пространстве
Преобразование look at --- перехрд в систему координат наблюдателя
$











Получаем перспективную проекцию `Perspective(fovy, aspect, near, far)`


// заканчиваем хуи
// я нихуя туда писать не буду, у меня вижак три изменения отменил блять дрочить
// вс код отъебнул
// хуже уже не будет, конспект заканчивается
// 


// HACK:
// Выпивают русский, хохол и еврей. Хохол:
// - Хочу, чтобы все москали сдохли!.
// Выпили. Русский:
// - Хочу, чтобы все хохлы сдохли!
// Выпили. Еврей:
// - Ну, за сказанное!
// ахаххахха